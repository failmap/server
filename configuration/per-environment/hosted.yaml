# configuration for a hosted production environment, includes things like firewall, ssh, etc.

classes:
  - base::env::hosted

# use docker friendly firewall purge on hosted environment
base::env::hosted::docker: true

# basic firewall config
base::firewall::rules:
  100 allow related, established:
    proto: all
    state:
      - RELATED
      - ESTABLISHED
    action: accept
  100 allow icmp:
    proto: icmp
    action: accept
  100 allow local:
    proto: all
    iniface: lo
    action: accept
  200 allow ssh:
    dport: ssh
    action: accept
  300 allow http traffic in:
    dport: http
    action: accept
  300 allow https traffic in:
    dport: https
    action: accept
  400 docker container statsd:
    proto: udp
    dport: 8125
    source: 172.18.0.0/12
    action: accept
  400 docker container mysql:
    proto: tcp
    dport: 3306
    source: 172.18.0.0/12
    action: accept
  999 drop the rest:
    proto: all
    action: drop

  # ipv6
  100 v6 allow related, established:
    proto: all
    state:
      - RELATED
      - ESTABLISHED
    action: accept
    provider: ip6tables
  100 v6 allow icmp:
    proto: ipv6-icmp
    action: accept
    provider: ip6tables
  100 v6 allow local:
    proto: all
    iniface: lo
    action: accept
    provider: ip6tables
  200 v6 allow ssh:
    dport: ssh
    action: accept
    provider: ip6tables
  300 v6 allow http traffic in:
    dport: http
    action: accept
    provider: ip6tables
  300 v6 allow https traffic in:
    dport: https
    action: accept
    provider: ip6tables
  999 v6 drop the rest:
    proto: all
    action: drop
    provider: ip6tables

  100 v6 allow related, established forwarding:
    chain: FORWARD
    state:
      - RELATED
      - ESTABLISHED
    action: accept
    provider: ip6tables
  100 v6 allow icmp forward docker in :
    chain: FORWARD
    proto: ipv6-icmp
    action: accept
    destination: 2a01:7c8:aac0:56b:0::0/64
    provider: ip6tables
  100 v6 traffic out forward:
    chain: FORWARD
    proto: all
    action: accept
    iniface: docker0
    outiface: eth0
    provider: ip6tables
  100 v6 websecmap docker intercontainer:
    chain: FORWARD
    proto: all
    action: accept
    source: 2a01:7c8:aac0:56b:0::0/64
    destination: 2a01:7c8:aac0:56b:0::0/64
    provider: ip6tables
  999 v6 drop the rest forward:
    chain: FORWARD
    proto: all
    action: drop
    provider: ip6tables

apps::websecmap::worker::workers_configuration:
  # no eventlet on storage due to simultaneous write errors
  storage: [--concurrency=6]
  reporting: [--concurrency=6]
  v6_internet: [--pool=gevent --concurrency=20]
  v4_internet: [--pool=gevent --concurrency=20]
  all_internet: [--pool=gevent --concurrency=20]
  qualys: [--pool=gevent --concurrency=40]
  claim_proxy: [--pool=gevent --concurrency=20]
  # scanner is deprecated, or a class?
  scanner: [--pool=gevent --concurrency=20]
