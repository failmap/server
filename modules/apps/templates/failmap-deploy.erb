#!/bin/bash

# exit on every error
set -e

user=$(logname)
image="<%= @image %>"

function rollback {
  /usr/bin/docker tag "${image/latest/rollback}" "${image}"
  systemctl restart docker-failmap-admin.service

  # wait for admin backend to be available
  timeout 30 /bin/sh -c 'while ! curl failmap-admin:8000 -H host:admin.faalkaart.nl >/dev/null ;do sleep 1; done'
  echo
  echo "Rollback complete!"
  echo
  exit 1
}
trap "rollback" SIGINT

# show every executed step
set -x

# save current image as rollback
/usr/bin/docker tag "${image}" "${image/latest/rollback}"

# update current image
/usr/bin/docker pull "${image}"

# use this until it's added as attribute to the docker container image
version=$(/usr/local/bin/failmap-admin shell -c 'import failmap_admin; print(failmap_admin.__version__)')

# push the event to monitoring
curl -s -XPOST influxdb:8086/write?db=events --data-binary "deploy,user=$user version=\"$version\"" || true

# migrate database
/usr/local/bin/failmap-admin migrate

# restart admin
systemctl restart docker-failmap-admin.service

# wait for admin backend to be available
timeout 30 /bin/sh -c 'while ! curl failmap-admin:8000 -H host:admin.faalkaart.nl >/dev/null ;do sleep 1; done'

set +x
echo
echo "Admin restarted, please verify and press [enter] to continue deploy or [ctrl-c] to rollback."
echo
echo "https://admin.faalkaart.nl/"
echo
set -x
# wait for user input
read -r

# restart all services
systemctl restart docker-failmap-*.service

# wait for admin backend to be available
timeout 30 /bin/sh -c 'while ! curl failmap-admin:8000 -H host:admin.faalkaart.nl >/dev/null ;do sleep 1; done'

echo
echo "Deploy complete!"
echo
