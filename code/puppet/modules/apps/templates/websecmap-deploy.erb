#!/bin/bash

# exit on every error
set -e

user=$(logname)
image="<%= @image %>"

function rollback {
  echo "Rolling back."
  /usr/bin/docker tag "${image/latest/rollback}" "${image}"
  systemctl restart docker-websecmap-admin.service

  # wait for admin backend to be available
  timeout 30 /bin/sh -c 'while ! curl -s <%= @admin_ip %>:8000 -H host:<%= @hostname %> >/dev/null ;do sleep 1; done'
  echo
  echo "Rollback complete!"
  echo
  exit 1
}
trap "rollback" SIGINT

# show every executed step
set -x

# save current image as rollback
/usr/bin/docker tag "${image}" "${image/latest/rollback}"

# update current image
/usr/bin/docker pull "${image}"

# use this until it's added as attribute to the docker container image
version=$(/usr/local/bin/websecmap shell -c 'import websecmap; print(websecmap.__version__)')

# push the event to monitoring
curl -s -XPOST influxdb:8086/write?db=events --data-binary "deploy,user=$user version=\"$version\"" || true

# migrate database
/usr/local/bin/websecmap-db-migrate

# restart admin
systemctl restart docker-websecmap-admin.service

# wait for admin backend to be available
timeout 30 /bin/sh -c 'while ! curl -s <%= @admin_ip %>:8000 -H host:<%= @hostname %> >/dev/null ;do sleep 1; done'

set +x
echo
echo "Admin restarted, please verify and press [enter] to continue deploy or [ctrl-c] to rollback."
echo
echo "https://<%= @hostname %>/manage"
echo
# wait for user input
read -r
set -x

# kill all remote (and local) workers
/usr/local/bin/websecmap celery control shutdown || true

# restart all services
cd /etc/systemd/system/; ls docker-websecmap-*.service | xargs systemctl restart

# wait for admin backend to be available
timeout 30 /bin/sh -c 'while ! curl -s <%= @admin_ip %>:8000 -H host:<%= @hostname %> >/dev/null ;do sleep 1; done'

# show container startus after deploy
docker ps

echo
echo "Deploy complete!"
echo
